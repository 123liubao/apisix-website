(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{121:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return o})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return p}));var r=n(3),a=n(8),s=(n(0),n(270)),i={title:"Install Ingress APISIX on Google Cloud GKE"},o={unversionedId:"deployments/gke",id:"deployments/gke",isDocsHomePage:!1,title:"Install Ingress APISIX on Google Cloud GKE",description:"\x3c!--",source:"@site/docs/apisix-ingress-controller/deployments/gke.md",slug:"/deployments/gke",permalink:"/docs/ingress-controller/deployments/gke",editUrl:"https://github.com/apache/apisix-ingress-controller/edit/master/docs/en/latest/deployments/gke.md",version:"current",sidebar:"docs",previous:{title:"Install Ingress APISIX on Azure AKS",permalink:"/docs/ingress-controller/deployments/azure"},next:{title:"Install Ingress APISIX on K3S and Rancher RKE",permalink:"/docs/ingress-controller/deployments/k3s-rke"}},l=[{value:"Prerequisites",id:"prerequisites",children:[]},{value:"Install APISIX",id:"install-apisix",children:[]},{value:"Install apisix-ingress-controller",id:"install-apisix-ingress-controller",children:[]}],c={toc:l};function p(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(s.b)("wrapper",Object(r.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(s.b)("p",null,"This document explains how to install Ingress APISIX on ",Object(s.b)("a",{parentName:"p",href:"https://cloud.google.com/kubernetes-engine"},"Google Cloud GKE"),"."),Object(s.b)("h2",{id:"prerequisites"},"Prerequisites"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},"Create an Kubernetes Service on GKE."),Object(s.b)("li",{parentName:"ul"},"Install ",Object(s.b)("a",{parentName:"li",href:"https://cloud.google.com/sdk"},"Google Cloud SDK")," and get the credentials or you can just use the ",Object(s.b)("a",{parentName:"li",href:"https://cloud.google.com/shell"},"Cloud Shell"),"."),Object(s.b)("li",{parentName:"ul"},"Install ",Object(s.b)("a",{parentName:"li",href:"https://helm.sh/"},"Helm"),"."),Object(s.b)("li",{parentName:"ul"},"Clone ",Object(s.b)("a",{parentName:"li",href:"https://github.com/apache/apisix-helm-chart"},"Apache APISIX Charts"),"."),Object(s.b)("li",{parentName:"ul"},"Make sure your target namespace exists, kubectl operations thorough this document will be executed in namespace ",Object(s.b)("inlineCode",{parentName:"li"},"ingress-apisix"),".")),Object(s.b)("h2",{id:"install-apisix"},"Install APISIX"),Object(s.b)("p",null,Object(s.b)("a",{parentName:"p",href:"http://apisix.apache.org/"},"Apache APISIX")," as the proxy plane of apisix-ingress-controller, should be deployed in advance."),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-shell"},'cd /path/to/apisix-helm-chart\nhelm repo add bitnami https://charts.bitnami.com/bitnami\nhelm repo add apisix https://charts.apiseven.com\n# Use `helm search repo apisix` to search charts about apisix\nhelm repo update\nhelm install apisix apisix/apisix \\\n  --set gateway.type=LoadBalancer \\\n  --set allow.ipList="{0.0.0.0/0}" \\\n  --namespace ingress-apisix\nkubectl get service --namespace ingress-apisix\n')),Object(s.b)("p",null,"Two Service resources were created, one is ",Object(s.b)("inlineCode",{parentName:"p"},"apisix-gateway"),", which processes the real traffic; another is ",Object(s.b)("inlineCode",{parentName:"p"},"apisix-admin"),", which acts as the control plane to process all the configuration changes."),Object(s.b)("p",null,"The gateway service type is set to ",Object(s.b)("inlineCode",{parentName:"p"},"LoadBalancer"),", so that clients can access Apache APISIX through the ",Object(s.b)("a",{parentName:"p",href:"https://cloud.google.com/kubernetes-engine/docs/concepts/service#services_of_type_loadbalancer"},"GKE Load Balancer")," . You can find the load balancer IP by running:"),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-shell"},"kubectl get service apisix-gateway --namespace ingress-apisix -o jsonpath='{.status.loadBalancer.ingress[].ip}'\n")),Object(s.b)("p",null,"Another thing should be concerned that the ",Object(s.b)("inlineCode",{parentName:"p"},"allow.ipList")," field should be customized according to the ",Object(s.b)("a",{parentName:"p",href:"https://cloud.google.com/kubernetes-engine/docs/how-to/flexible-pod-cidr"},"Pod CIRD configuration of GKE"),", so that the apisix-ingress-controller instances can access the APISIX instances (resources pushing)."),Object(s.b)("h2",{id:"install-apisix-ingress-controller"},"Install apisix-ingress-controller"),Object(s.b)("p",null,"You can also install apisix-ingress-controller by Helm Charts, it's recommended to install it in the same namespace with Apache APISIX."),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-shell"},"cd /path/to/apisix-helm-chart\n# install apisix-ingress-controller\nhelm install apisix-ingress-controller apisix/apisix-ingress-controller \\\n  --set image.tag=dev \\\n  --set config.apisix.baseURL=http://apisix-admin:9180/apisix/admin \\\n  --set config.apisix.adminKey=edd1c9f034335f136f87ad84b625c8f1 \\\n  --namespace ingress-apisix\n")),Object(s.b)("p",null,"Change the ",Object(s.b)("inlineCode",{parentName:"p"},"image.tag")," to the apisix-ingress-controller version that you desire. You have to wait for while until the corresponding pods are running."),Object(s.b)("p",null,"Now try to create some ",Object(s.b)("a",{parentName:"p",href:"https://github.com/apache/apisix-ingress-controller/tree/master/docs/en/latest/concepts"},"resources")," to verify the running status. As a minimalist example, see ",Object(s.b)("a",{parentName:"p",href:"/docs/ingress-controller/practices/proxy-the-httpbin-service"},"proxy-the-httpbin-service")," to learn how to apply resources to drive the apisix-ingress-controller."))}p.isMDXComponent=!0},270:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return d}));var r=n(0),a=n.n(r);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=a.a.createContext({}),p=function(e){var t=a.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return a.a.createElement(c.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},h=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),h=r,d=u["".concat(i,".").concat(h)]||u[h]||b[h]||s;return n?a.a.createElement(d,o(o({ref:t},c),{},{components:n})):a.a.createElement(d,o({ref:t},c))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,i=new Array(s);i[0]=h;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var c=2;c<s;c++)i[c]=n[c];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}h.displayName="MDXCreateElement"}}]);