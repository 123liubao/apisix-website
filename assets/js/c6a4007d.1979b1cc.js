(window.webpackJsonp=window.webpackJsonp||[]).push([[152],{219:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return s})),t.d(n,"metadata",(function(){return l})),t.d(n,"toc",(function(){return o})),t.d(n,"default",(function(){return p}));var r=t(3),i=t(8),a=(t(0),t(270)),s={title:"Apache APISIX Ingress Controller Helm Chart"},l={unversionedId:"apisix-ingress-controller",id:"apisix-ingress-controller",isDocsHomePage:!1,title:"Apache APISIX Ingress Controller Helm Chart",description:"\x3c!--",source:"@site/docs/apisix-helm-chart/apisix-ingress-controller.md",slug:"/apisix-ingress-controller",permalink:"/docs/helm-chart/apisix-ingress-controller",editUrl:"https://github.com/apache/apisix-helm-chart/edit/master/docs/en/latest/apisix-ingress-controller.md",version:"current",sidebar:"docs",previous:{title:"Apache APISIX Dashboard Helm Chart",permalink:"/docs/helm-chart/apisix-dashboard"}},o=[{value:"Prerequisites",id:"prerequisites",children:[]},{value:"Install",id:"install",children:[]},{value:"Uninstall",id:"uninstall",children:[]},{value:"Deployment Options",id:"deployment-options",children:[{value:"ingress version",id:"ingress-version",children:[]}]},{value:"Upgrade Considerations",id:"upgrade-considerations",children:[{value:"CRD",id:"crd",children:[]}]}],c={toc:o};function p(e){var n=e.components,t=Object(i.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},c,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"prerequisites"},"Prerequisites"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",{parentName:"li",href:"https://kubernetes.io/docs/setup/"},"Kubernetes 1.12+")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",{parentName:"li",href:"https://github.com/apache/apisix#configure-and-installation"},"Apache APISIX")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",{parentName:"li",href:"https://helm.sh/docs/intro/quickstart/#install-helm"},"Helm v3.0+"))),Object(a.b)("h2",{id:"install"},"Install"),Object(a.b)("p",null,"To install apisix-ingress-controller which release name is ",Object(a.b)("inlineCode",{parentName:"p"},"apisix-ingress-controller"),":"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-bash"},"$ helm repo add apisix https://charts.apiseven.com\n$ helm repo update\n$ helm install apisix-ingress-controller apisix/apisix-ingress-controller --namespace ingress-apisix\n")),Object(a.b)("h2",{id:"uninstall"},"Uninstall"),Object(a.b)("p",null,"To uninstall/delete the ",Object(a.b)("inlineCode",{parentName:"p"},"apisix-ingress-controller")," release:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-bash"},"helm uninstall apisix-ingress-controller --namespace ingress-apisix\n")),Object(a.b)("h2",{id:"deployment-options"},"Deployment Options"),Object(a.b)("h3",{id:"ingress-version"},"ingress version"),Object(a.b)("p",null,"By default apisix-ingress-controller watches the ",Object(a.b)("a",{parentName:"p",href:"https://kubernetes.io/docs/concepts/services-networking/ingress/"},"Ingress")," resources in api group ",Object(a.b)("inlineCode",{parentName:"p"},"networking/v1"),", however, if your Kubernetes cluster is prior to ",Object(a.b)("inlineCode",{parentName:"p"},"v1.19"),", you need to change the ingress watching version."),Object(a.b)("p",null,"If your Kubernetes version is older than ",Object(a.b)("inlineCode",{parentName:"p"},"v1.14"),", then:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-shell"},"helm install apisix-ingress-controller apisix/apisix-ingress-controller --namespace ingress-apisix --set config.kubernetes.ingressVersion=extensions/v1beta1\n")),Object(a.b)("p",null,"Or if your Kubernetes version is between ",Object(a.b)("inlineCode",{parentName:"p"},"v1.14")," and ",Object(a.b)("inlineCode",{parentName:"p"},"v1.19"),", try below:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-shell"},"helm install apisix-ingress-controller apisix/apisix-ingress-controller --namespace ingress-apisix --set config.kubernetes.ingressVersion=networking/v1beta1\n")),Object(a.b)("h2",{id:"upgrade-considerations"},"Upgrade Considerations"),Object(a.b)("h3",{id:"crd"},"CRD"),Object(a.b)("p",null,"CRDs upgrading is special as helm chart will skip to apply these resources when they already exist."),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"With the arrival of Helm 3, we removed the old crd-install hooks for a more simple methodology. There is now a special directory called crds that you can create in your chart to hold your CRDs. These CRDs are not templated, but will be installed by default when running a helm install for the chart. If the CRD already exists, it will be skipped with a warning. If you wish to skip the CRD installation step, you can pass the --skip-crds flag.")),Object(a.b)("p",null,"In such a case, you may need to apply these CRDs by yourself."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-shell"},"$ cd /path/to/apisix-ingress-controller\n$ kubectl apply -k samples/deploy/crd/\n")))}p.isMDXComponent=!0},270:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return h}));var r=t(0),i=t.n(r);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=i.a.createContext({}),p=function(e){var n=i.a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=p(e.components);return i.a.createElement(c.Provider,{value:n},e.children)},b={inlineCode:"code",wrapper:function(e){var n=e.children;return i.a.createElement(i.a.Fragment,{},n)}},d=i.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=p(t),d=r,h=u["".concat(s,".").concat(d)]||u[d]||b[d]||a;return t?i.a.createElement(h,l(l({ref:n},c),{},{components:t})):i.a.createElement(h,l({ref:n},c))}));function h(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,s=new Array(a);s[0]=d;var l={};for(var o in n)hasOwnProperty.call(n,o)&&(l[o]=n[o]);l.originalType=e,l.mdxType="string"==typeof e?e:r,s[1]=l;for(var c=2;c<a;c++)s[c]=t[c];return i.a.createElement.apply(null,s)}return i.a.createElement.apply(null,t)}d.displayName="MDXCreateElement"}}]);